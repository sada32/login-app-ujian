{"ast":null,"code":"var _jsxFileName = \"/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/Login/Login.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Button, Col, Form, Row, InputGroup } from \"react-bootstrap\";\nimport FormTextField from \"../components/form/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  username: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n  terms: yup.bool().required()\n});\nconst Login = () => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Formik","yup","Button","Col","Form","Row","InputGroup","FormTextField","schema","object","firstName","string","required","lastName","username","city","state","zip","terms","bool","Login"],"sources":["/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/Login/Login.js"],"sourcesContent":["import React from \"react\";\nimport {Formik} from \"formik\";\nimport * as yup from \"yup\";\nimport {Button, Col, Form, Row, InputGroup} from \"react-bootstrap\";\nimport FormTextField from \"../components/form/form\";\n\nconst schema = yup.object({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    username: yup.string().required(),\n    city: yup.string().required(),\n    state: yup.string().required(),\n    zip: yup.string().required(),\n    terms: yup.bool().required()\n});\n\nconst Login = () => {\n    return (\n        <Row>\n            <Col>\n                {/*<Formik*/}\n                {/*    validationSchema={schema}*/}\n                {/*    onSubmit={console.log}*/}\n                {/*    initialValues={{*/}\n                {/*        firstName: '',*/}\n                {/*        lastName: \"Otto\",*/}\n                {/*        city: undefined,*/}\n                {/*        state: \"ON\",*/}\n                {/*        friends: [{firstName: \"John\", lastName: \"Snow\"}]*/}\n                {/*    }}*/}\n                {/*>*/}\n                {/*    {({*/}\n                {/*          handleSubmit,*/}\n                {/*          handleChange,*/}\n                {/*          values,*/}\n                {/*          errors,*/}\n                {/*          isValid,*/}\n                {/*          isSubmitting*/}\n                {/*      }) => (*/}\n                {/*        <Form noValidate onSubmit={handleSubmit}>*/}\n                {/*            <Col>*/}\n                {/*                <FormTextField*/}\n                {/*                    as={Col}*/}\n                {/*                    md=\"4\"*/}\n                {/*                    controlId=\"validationFormikUsername\"*/}\n                {/*                    label=\"Username\"*/}\n                {/*                    type=\"text\"*/}\n                {/*                    name=\"username\"*/}\n                {/*                    inputGroupPrepend={*/}\n                {/*                        <InputGroup.Prepend>*/}\n                {/*                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>*/}\n                {/*                        </InputGroup.Prepend>*/}\n                {/*                    }*/}\n                {/*                />*/}\n                {/*            </Col>*/}\n                {/*            <Col>*/}\n                {/*                <Button*/}\n                {/*                    disabled={!isValid || isSubmitting}*/}\n                {/*                    variant=\"success\"*/}\n                {/*                    as=\"input\"*/}\n                {/*                    size=\"lg\"*/}\n                {/*                    type=\"submit\"*/}\n                {/*                    value=\"Submit\"*/}\n                {/*                />*/}\n                {/*            </Col>*/}\n                {/*        </Form>*/}\n                {/*    )}*/}\n                {/*</Formik>*/}\n            </Col>\n        </Row>\n    );\n}\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAAQC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAO,iBAAiB;AAClE,OAAOC,aAAa,MAAM,yBAAyB;AAAC;AAEpD,MAAMC,MAAM,GAAGP,GAAG,CAACQ,MAAM,CAAC;EACtBC,SAAS,EAAET,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,EAAE;EAClCC,QAAQ,EAAEZ,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,EAAE;EACjCE,QAAQ,EAAEb,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,EAAE;EACjCG,IAAI,EAAEd,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,EAAE;EAC7BI,KAAK,EAAEf,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,EAAE;EAC9BK,GAAG,EAAEhB,GAAG,CAACU,MAAM,EAAE,CAACC,QAAQ,EAAE;EAC5BM,KAAK,EAAEjB,GAAG,CAACkB,IAAI,EAAE,CAACP,QAAQ;AAC9B,CAAC,CAAC;AAEF,MAAMQ,KAAK,GAAG,MAAM;EAChB,oBACI,QAAC,GAAG;IAAA,uBACA,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA;EAiDE;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KAvDKA,KAAK;AAyDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}