{"ast":null,"code":"var _jsxFileName = \"/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Password must be 2 characters at minimum.').max(10, 'Password must be 10 characters at maximum.').required('Required')\n});\nconst Login = () => {\n  _s();\n  const [isRegister, setIsRegister] = useState(false);\n  const formik = useRef(null);\n  function toggleRegisterClick() {\n    setIsRegister(!isRegister);\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 12,\n      sm: 8,\n      md: 6,\n      lg: 4,\n      className: \"mx-auto mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleRegisterClick,\n            variant: \"outline-primary\",\n            className: \"float-right\",\n            children: isRegister ? 'Login' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title mb-4 mt-1\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            ref: formik,\n            initialValues: {\n              email: '',\n              password: ''\n            },\n            validationSchema: loginSchema,\n            onSubmit: (values, actions) => {\n              setTimeout(() => {\n                // alert(JSON.stringify(values, null, 2));\n                // if ('name' in values) registerLocalUser(values);\n                // else loginLocalUser(values);\n                // actions.setSubmitting(false);\n                // actions.resetForm();\n                // redirectAfterLogin(() => history.push('/home'));\n              }, 1000);\n            },\n            onChange: e => console.log(e),\n            render: props => {\n              const {\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                errors,\n                isSubmitting\n              } = props;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  noValidate: true,\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"validationFormik2\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"email\",\n                      type: \"email\",\n                      placeholder: \"Email\",\n                      value: values.email\n                      // onChange={handleChange}\n                      // onBlur={handleBlur}\n                      // isInvalid={touched.email && !!errors.email}\n                      // isValid={touched.email && !errors.email}\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      as: Col,\n                      md: \"6\",\n                      controlId: \"validationFormik3\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          type: \"submit\",\n                          className: \"btn-block\",\n                          disabled: isSubmitting,\n                          children: \"Login\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6 text-right\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"small\",\n                        href: \"#\",\n                        children: \"Forgot password?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"YSZH/4Er09jHvugwBKJA1UcrwLI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Formik","Field","Yup","Form","Row","Col","Button","loginSchema","object","shape","email","string","required","password","min","max","Login","isRegister","setIsRegister","formik","toggleRegisterClick","current","resetForm","values","actions","setTimeout","e","console","log","props","handleSubmit","handleChange","handleBlur","touched","errors","isSubmitting"],"sources":["/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/login/Login.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\n\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\n\n\n\nconst loginSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(2, 'Password must be 2 characters at minimum.')\n        .max(10, 'Password must be 10 characters at maximum.')\n        .required('Required'),\n});\n\nconst Login = () => {\n    const [isRegister, setIsRegister] = useState(false);\n    const formik = useRef(null);\n\n    function toggleRegisterClick() {\n        setIsRegister(!isRegister);\n        if (formik.current) {\n            formik.current.resetForm();\n        }\n    }\n\n    return (\n        <Row>\n            <Col xs={12} sm={8} md={6} lg={4} className=\"mx-auto mt-5\">\n                <div className=\"card\">\n                    <article className=\"card-body\">\n                        <Button\n                            onClick={toggleRegisterClick}\n                            variant=\"outline-primary\"\n                            className=\"float-right\"\n                        >\n                            {isRegister ? 'Login' : 'Register'}\n                        </Button>\n                        <h4 className=\"card-title mb-4 mt-1\">Sign in</h4>\n                        <hr />\n\n                        <Formik\n                            ref={formik}\n                            initialValues={{\n                                email: '',\n                                password: '',\n                            }\n                            }\n                            validationSchema={loginSchema}\n                            onSubmit={(values, actions) => {\n                                setTimeout(() => {\n                                    // alert(JSON.stringify(values, null, 2));\n                                    // if ('name' in values) registerLocalUser(values);\n                                    // else loginLocalUser(values);\n                                    // actions.setSubmitting(false);\n                                    // actions.resetForm();\n                                    // redirectAfterLogin(() => history.push('/home'));\n                                }, 1000);\n                            }}\n                            onChange={e => console.log(e)}\n                            render={props => {\n                                const {\n                                    handleSubmit,\n                                    handleChange,\n                                    handleBlur,\n                                    values,\n                                    touched,\n                                    errors,\n                                    isSubmitting,\n                                } = props;\n                                return (\n                                    <>\n                                        <Form noValidate onSubmit={handleSubmit}>\n                                            <Form.Group controlId=\"validationFormik2\">\n                                                <Form.Control\n                                                    name=\"email\"\n                                                    type=\"email\"\n                                                    placeholder=\"Email\"\n                                                    value={values.email}\n                                                    // onChange={handleChange}\n                                                    // onBlur={handleBlur}\n                                                    // isInvalid={touched.email && !!errors.email}\n                                                    // isValid={touched.email && !errors.email}\n                                                />\n                                                {/*<Form.Control.Feedback>*/}\n                                                {/*    Looks good!*/}\n                                                {/*</Form.Control.Feedback>*/}\n                                                {/*<Form.Control.Feedback type=\"invalid\">*/}\n                                                {/*    {errors.email}*/}\n                                                {/*</Form.Control.Feedback>*/}\n                                            </Form.Group>\n                                            {/*<Form.Group controlId=\"validationFormik3\">*/}\n                                            {/*    <Form.Control*/}\n                                            {/*        name=\"password\"*/}\n                                            {/*        type=\"password\"*/}\n                                            {/*        placeholder=\"Password\"*/}\n                                            {/*        // value={values.password}*/}\n                                            {/*        // onChange={handleChange}*/}\n                                            {/*        // onBlur={handleBlur}*/}\n                                            {/*        // isInvalid={touched.password && !!errors.password}*/}\n                                            {/*        // isValid={touched.password && !errors.password}*/}\n                                            {/*    />*/}\n                                            {/*    /!*<Form.Control.Feedback>*!/*/}\n                                            {/*    /!*    Looks good!*!/*/}\n                                            {/*    /!*</Form.Control.Feedback>*!/*/}\n                                            {/*    /!*<Form.Control.Feedback type=\"invalid\">*!/*/}\n                                            {/*    /!*    {errors.password}*!/*/}\n                                            {/*    /!*</Form.Control.Feedback>*!/*/}\n                                            {/*</Form.Group>*/}\n                                            <Form.Row>\n                                                <Form.Group\n                                                    as={Col}\n                                                    md=\"6\"\n                                                    controlId=\"validationFormik3\"\n                                                >\n                                                    <Form.Group>\n                                                        <Button\n                                                            type=\"submit\"\n                                                            className=\"btn-block\"\n                                                            disabled={isSubmitting}\n                                                        >\n                                                            Login\n                                                        </Button>\n                                                    </Form.Group>\n                                                </Form.Group>\n                                                <div className=\"col-md-6 text-right\">\n                                                    <a className=\"small\" href=\"#\">\n                                                        Forgot password?\n                                                    </a>\n                                                </div>\n                                            </Form.Row>\n\n                                        </Form>\n                                    </>\n                                );\n                            }}\n                        />\n                    </article>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}