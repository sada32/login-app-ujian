{"ast":null,"code":"var _jsxFileName = \"/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/Register/Register.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport FormTextField from \"../components/form/form\";\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { toast } from \"react-toastify\";\nimport { Auth } from \"../config/firebase\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = yup.object().shape({\n  username: yup.string().required('Email harus di isi!'),\n  password: yup.string().min(8, 'Password must be 8 characters long').matches(/[0-9]/, 'Password requires a number').matches(/[a-z]/, 'Password requires a lowercase letter').matches(/[A-Z]/, 'Password requires an uppercase letter').matches(/[^\\w]/, 'Password requires a symbol').required('Password harus di isi!')\n});\nconst Register = () => {\n  const handleSubmit = e => {\n    debugger;\n    const {\n      username,\n      password\n    } = e;\n    const email = username;\n    createUserWithEmailAndPassword(Auth, email, password).then(authUser => {\n      debugger;\n      localStorage.setItem('uid', authUser.user.uid);\n      toast.success('Pendaftaran berhasil, silahkan login!!');\n      window.location.reload();\n    }).catch(error => alert(error.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4 container-login p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"my-2\",\n        width: \"100px\",\n        src: \"/images/icon-person.png\",\n        alt: \"Icon Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-white\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            validationSchema: loginSchema,\n            onSubmit: values => handleSubmit(values),\n            initialValues: {\n              firstName: '',\n              password: ''\n            },\n            children: _ref => {\n              let {\n                handleSubmit,\n                isValid,\n                isSubmitting\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(FormTextField, {\n                    controlId: \"validationFormikUsername\",\n                    label: \"Username\",\n                    type: \"text\",\n                    name: \"username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(FormTextField, {\n                    controlId: \"validationFormikPassword\",\n                    label: \"Password\",\n                    type: \"password\",\n                    name: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"my-4\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    as: \"input\",\n                    className: \"px-5\",\n                    size: \"lg\",\n                    variant: \"dark\",\n                    type: \"submit\",\n                    value: \"Register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Formik","yup","Button","Col","Form","Row","FormTextField","createUserWithEmailAndPassword","toast","Auth","Link","loginSchema","object","shape","username","string","required","password","min","matches","Register","handleSubmit","e","email","then","authUser","localStorage","setItem","user","uid","success","window","location","reload","catch","error","alert","message","values","firstName","isValid","isSubmitting"],"sources":["/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/Register/Register.js"],"sourcesContent":["import React from \"react\";\nimport {Formik} from \"formik\";\nimport * as yup from \"yup\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport FormTextField from \"../components/form/form\";\nimport {createUserWithEmailAndPassword} from 'firebase/auth';\nimport {toast} from \"react-toastify\";\nimport {Auth} from \"../config/firebase\";\nimport {Link} from \"react-router-dom\";\n\nconst loginSchema = yup.object().shape({\n    username: yup.string().required('Email harus di isi!'),\n    password: yup.string().min(8, 'Password must be 8 characters long')\n        .matches(/[0-9]/, 'Password requires a number')\n        .matches(/[a-z]/, 'Password requires a lowercase letter')\n        .matches(/[A-Z]/, 'Password requires an uppercase letter')\n        .matches(/[^\\w]/, 'Password requires a symbol').required('Password harus di isi!'),\n});\n\n\nconst Register = () => {\n\n    const handleSubmit = (e) => {\n        debugger\n        const {username, password} = e\n        const email = username;\n        createUserWithEmailAndPassword(Auth, email, password).then((authUser) => {\n            debugger\n            localStorage.setItem('uid', authUser.user.uid)\n            toast.success('Pendaftaran berhasil, silahkan login!!')\n            window.location.reload();\n        }).catch((error) => alert(error.message));\n    }\n\n    return (\n        <div className=\"global-container\">\n            <div className=\"col-md-4 container-login p-5\">\n                <img className=\"my-2\" width=\"100px\" src=\"/images/icon-person.png\" alt=\"Icon Person\"/>\n                <h4 className=\"text-white\">Register</h4>\n                <Row className=\"mt-3\">\n                    <Col>\n                        <Formik\n                            validationSchema={loginSchema}\n                            onSubmit={(values) => handleSubmit(values)}\n                            initialValues={{\n                                firstName: '',\n                                password: '',\n                            }}\n                        >\n                            {({\n                                  handleSubmit,\n                                  isValid,\n                                  isSubmitting\n                              }) => (\n                                <Form noValidate onSubmit={handleSubmit}>\n                                    <Col>\n                                        <FormTextField\n                                            controlId=\"validationFormikUsername\"\n                                            label=\"Username\"\n                                            type=\"text\"\n                                            name=\"username\"\n                                        />\n                                    </Col>\n                                    <Col className=\"mt-3\">\n                                        <FormTextField\n                                            controlId=\"validationFormikPassword\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            name=\"password\"\n                                        />\n                                    </Col>\n                                    <Col className=\"my-4\">\n                                        <Button\n                                            as=\"input\"\n                                            className=\"px-5\"\n                                            size=\"lg\"\n                                            variant=\"dark\"\n                                            type=\"submit\"\n                                            value=\"Register\"\n                                        />\n                                    </Col>\n\n                                </Form>\n                            )}\n                        </Formik>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}