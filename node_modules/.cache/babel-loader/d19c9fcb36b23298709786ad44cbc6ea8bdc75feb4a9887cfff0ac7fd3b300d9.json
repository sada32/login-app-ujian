{"ast":null,"code":"var _jsxFileName = \"/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/login/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport GoogleLogin from 'react-google-login';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { config } from '../../services/config';\nimport { setGoogleUser, registerLocalUser, loginLocalUser, redirectAfterLogin } from '../../store/actions/auth';\nimport { showToast } from '../../store/actions/toast';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DisplayFormikState = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    margin: '1rem 0'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    style: {\n      fontFamily: 'monospace'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n    style: {\n      background: '#f6f8fa',\n      fontSize: '.65rem',\n      padding: '.5rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"props\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \" = \", JSON.stringify(props, null, 2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 5\n}, this);\n_c = DisplayFormikState;\nconst registerSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Password must be 2 characters at minimum.').max(10, 'Password must be 10 characters at maximum.').required('Required'),\n  name: Yup.string().min(2, 'Name must be 2 characters at minimum.').max(10, 'Name must be 10 characters at maximum.').required('Required'),\n  repeatPassword: Yup.string().when('password', {\n    is: val => val && val.length > 0 ? true : false,\n    then: Yup.string().oneOf([Yup.ref('password')], 'Both password must be the same')\n  }).required('Required')\n});\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(2, 'Password must be 2 characters at minimum.').max(10, 'Password must be 10 characters at maximum.').required('Required')\n});\nconst Login = _ref => {\n  _s();\n  let {\n    setGoogleUser,\n    showToast,\n    registerLocalUser,\n    loginLocalUser,\n    redirectAfterLogin,\n    history\n  } = _ref;\n  const [isRegister, setIsRegister] = useState(false);\n  const formik = useRef(null);\n  function toggleRegisterClick() {\n    setIsRegister(!isRegister);\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n  }\n  const responseGoogleSuccess = response => {\n    setGoogleUser(response.profileObj);\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n    redirectAfterLogin(() => history.push('/home'));\n  };\n  const responseGoogleFail = response => {\n    showToast({\n      title: 'Error',\n      text: `Error loging in with Google: ${response.error}.`\n    });\n    if (formik.current) {\n      formik.current.resetForm();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 12,\n      sm: 8,\n      md: 6,\n      lg: 4,\n      className: \"mx-auto mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleRegisterClick,\n            variant: \"outline-primary\",\n            className: \"float-right\",\n            children: isRegister ? 'Login' : 'Register'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title mb-4 mt-1\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            ref: formik,\n            initialValues: isRegister ? {\n              email: '',\n              password: '',\n              name: '',\n              repeatPassword: ''\n            } : {\n              email: '',\n              password: ''\n            },\n            validationSchema: isRegister ? registerSchema : loginSchema,\n            onSubmit: (values, actions) => {\n              setTimeout(() => {\n                // alert(JSON.stringify(values, null, 2));\n                if ('name' in values) registerLocalUser(values);else loginLocalUser(values);\n                actions.setSubmitting(false);\n                actions.resetForm();\n                redirectAfterLogin(() => history.push('/home'));\n              }, 1000);\n            },\n            onChange: e => console.log(e),\n            render: props => {\n              const {\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n                isSubmitting\n              } = props;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  noValidate: true,\n                  onSubmit: handleSubmit,\n                  children: [isRegister && /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"validationFormik1\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"name\",\n                      type: \"input\",\n                      placeholder: \"Name\",\n                      value: values.name,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.name && !!errors.name,\n                      isValid: touched.name && !errors.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      children: \"Looks good!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"validationFormik2\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"email\",\n                      type: \"email\",\n                      placeholder: \"Email\",\n                      value: values.email,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.email && !!errors.email,\n                      isValid: touched.email && !errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      children: \"Looks good!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"validationFormik3\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"password\",\n                      type: \"password\",\n                      placeholder: \"Password\",\n                      value: values.password,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.password && !!errors.password,\n                      isValid: touched.password && !errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      children: \"Looks good!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.password\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 45\n                  }, this), isRegister && /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"validationFormik4\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                      name: \"repeatPassword\",\n                      type: \"password\",\n                      placeholder: \"Repeat Password\",\n                      value: values.repeatPassword,\n                      onChange: handleChange,\n                      onBlur: handleBlur,\n                      isInvalid: touched.repeatPassword && !!errors.repeatPassword,\n                      isValid: touched.repeatPassword && !errors.repeatPassword\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      children: \"Looks good!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.repeatPassword\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      as: Col,\n                      md: \"6\",\n                      controlId: \"validationFormik3\",\n                      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          type: \"submit\",\n                          className: \"btn-block\",\n                          disabled: isSubmitting,\n                          children: isSubmitting ? 'Please wait...' : isRegister ? 'Register' : 'Login'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6 text-right\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"small\",\n                        href: \"#\",\n                        children: \"Forgot password?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"YSZH/4Er09jHvugwBKJA1UcrwLI=\");\n_c2 = Login;\nexport default connect(state => ({}), {\n  setGoogleUser,\n  showToast,\n  registerLocalUser,\n  loginLocalUser,\n  redirectAfterLogin\n})(withRouter(Login));\n/*\nprofileObj:\nemail: \"api@gmail.com\"\nfamilyName: \"Kralc\"\ngivenName: \"rko\"\ngoogleId: \"25350571\"\nimageUrl: \"https://lh6.googleusercontent.com/-6ZAIGkgvuaQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc9E5uex_lbFBctbj8KYQ6cLt5WLg/s96-c/photo.jpg\"\nname: \"rko Kral\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"DisplayFormikState\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Formik","Field","Yup","GoogleLogin","connect","withRouter","Form","Row","Col","Button","config","setGoogleUser","registerLocalUser","loginLocalUser","redirectAfterLogin","showToast","DisplayFormikState","props","margin","fontFamily","background","fontSize","padding","JSON","stringify","registerSchema","object","shape","email","string","required","password","min","max","name","repeatPassword","when","is","val","length","then","oneOf","ref","loginSchema","Login","history","isRegister","setIsRegister","formik","toggleRegisterClick","current","resetForm","responseGoogleSuccess","response","profileObj","push","responseGoogleFail","title","text","error","values","actions","setTimeout","setSubmitting","e","console","log","handleSubmit","handleChange","handleBlur","touched","isValid","errors","isSubmitting","state"],"sources":["/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/login/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport GoogleLogin from 'react-google-login';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport { config } from '../../services/config';\nimport {\n    setGoogleUser,\n    registerLocalUser,\n    loginLocalUser,\n    redirectAfterLogin,\n} from '../../store/actions/auth';\nimport { showToast } from '../../store/actions/toast';\n\nimport './styles.css';\n\nexport const DisplayFormikState = props => (\n    <div style={{ margin: '1rem 0' }}>\n        <h3 style={{ fontFamily: 'monospace' }} />\n        <pre\n            style={{\n                background: '#f6f8fa',\n                fontSize: '.65rem',\n                padding: '.5rem',\n            }}\n        >\n      <strong>props</strong> = {JSON.stringify(props, null, 2)}\n    </pre>\n    </div>\n);\n\n\nconst registerSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(2, 'Password must be 2 characters at minimum.')\n        .max(10, 'Password must be 10 characters at maximum.')\n        .required('Required'),\n    name: Yup.string()\n        .min(2, 'Name must be 2 characters at minimum.')\n        .max(10, 'Name must be 10 characters at maximum.')\n        .required('Required'),\n    repeatPassword: Yup.string()\n        .when('password', {\n            is: val => (val && val.length > 0 ? true : false),\n            then: Yup.string().oneOf(\n                [Yup.ref('password')],\n                'Both password must be the same',\n            ),\n        })\n        .required('Required'),\n});\n\nconst loginSchema = Yup.object().shape({\n    email: Yup.string()\n        .email('Invalid email')\n        .required('Required'),\n    password: Yup.string()\n        .min(2, 'Password must be 2 characters at minimum.')\n        .max(10, 'Password must be 10 characters at maximum.')\n        .required('Required'),\n});\n\nconst Login = ({\n                   setGoogleUser,\n                   showToast,\n                   registerLocalUser,\n                   loginLocalUser,\n                   redirectAfterLogin,\n                   history,\n               }) => {\n    const [isRegister, setIsRegister] = useState(false);\n    const formik = useRef(null);\n\n    function toggleRegisterClick() {\n        setIsRegister(!isRegister);\n        if (formik.current) {\n            formik.current.resetForm();\n        }\n    }\n\n    const responseGoogleSuccess = response => {\n        setGoogleUser(response.profileObj);\n        if (formik.current) {\n            formik.current.resetForm();\n        }\n        redirectAfterLogin(() => history.push('/home'));\n    };\n\n    const responseGoogleFail = response => {\n        showToast({\n            title: 'Error',\n            text: `Error loging in with Google: ${response.error}.`,\n        });\n        if (formik.current) {\n            formik.current.resetForm();\n        }\n    };\n\n    return (\n        <Row>\n            <Col xs={12} sm={8} md={6} lg={4} className=\"mx-auto mt-5\">\n                <div className=\"card\">\n                    <article className=\"card-body\">\n                        <Button\n                            onClick={toggleRegisterClick}\n                            variant=\"outline-primary\"\n                            className=\"float-right\"\n                        >\n                            {isRegister ? 'Login' : 'Register'}\n                        </Button>\n                        <h4 className=\"card-title mb-4 mt-1\">Sign in</h4>\n                        <hr />\n\n                        <Formik\n                            ref={formik}\n                            initialValues={\n                                isRegister\n                                    ? {\n                                        email: '',\n                                        password: '',\n                                        name: '',\n                                        repeatPassword: '',\n                                    }\n                                    : {\n                                        email: '',\n                                        password: '',\n                                    }\n                            }\n                            validationSchema={isRegister ? registerSchema : loginSchema}\n                            onSubmit={(values, actions) => {\n                                setTimeout(() => {\n                                    // alert(JSON.stringify(values, null, 2));\n                                    if ('name' in values) registerLocalUser(values);\n                                    else loginLocalUser(values);\n                                    actions.setSubmitting(false);\n                                    actions.resetForm();\n                                    redirectAfterLogin(() => history.push('/home'));\n                                }, 1000);\n                            }}\n                            onChange={e => console.log(e)}\n                            render={props => {\n                                const {\n                                    handleSubmit,\n                                    handleChange,\n                                    handleBlur,\n                                    values,\n                                    touched,\n                                    isValid,\n                                    errors,\n                                    isSubmitting,\n                                } = props;\n                                return (\n                                    <>\n                                        <Form noValidate onSubmit={handleSubmit}>\n                                            {isRegister && (\n                                                <Form.Group controlId=\"validationFormik1\">\n                                                    <Form.Control\n                                                        name=\"name\"\n                                                        type=\"input\"\n                                                        placeholder=\"Name\"\n                                                        value={values.name}\n                                                        onChange={handleChange}\n                                                        onBlur={handleBlur}\n                                                        isInvalid={touched.name && !!errors.name}\n                                                        isValid={touched.name && !errors.name}\n                                                    />\n                                                    <Form.Control.Feedback>\n                                                        Looks good!\n                                                    </Form.Control.Feedback>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors.name}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            )}\n                                            <Form.Group controlId=\"validationFormik2\">\n                                                <Form.Control\n                                                    name=\"email\"\n                                                    type=\"email\"\n                                                    placeholder=\"Email\"\n                                                    value={values.email}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    isInvalid={touched.email && !!errors.email}\n                                                    isValid={touched.email && !errors.email}\n                                                />\n                                                <Form.Control.Feedback>\n                                                    Looks good!\n                                                </Form.Control.Feedback>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors.email}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                            <Form.Group controlId=\"validationFormik3\">\n                                                <Form.Control\n                                                    name=\"password\"\n                                                    type=\"password\"\n                                                    placeholder=\"Password\"\n                                                    value={values.password}\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    isInvalid={touched.password && !!errors.password}\n                                                    isValid={touched.password && !errors.password}\n                                                />\n                                                <Form.Control.Feedback>\n                                                    Looks good!\n                                                </Form.Control.Feedback>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {errors.password}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                            {isRegister && (\n                                                <Form.Group controlId=\"validationFormik4\">\n                                                    <Form.Control\n                                                        name=\"repeatPassword\"\n                                                        type=\"password\"\n                                                        placeholder=\"Repeat Password\"\n                                                        value={values.repeatPassword}\n                                                        onChange={handleChange}\n                                                        onBlur={handleBlur}\n                                                        isInvalid={\n                                                            touched.repeatPassword && !!errors.repeatPassword\n                                                        }\n                                                        isValid={\n                                                            touched.repeatPassword && !errors.repeatPassword\n                                                        }\n                                                    />\n                                                    <Form.Control.Feedback>\n                                                        Looks good!\n                                                    </Form.Control.Feedback>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {errors.repeatPassword}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>\n                                            )}\n                                            <Form.Row>\n                                                <Form.Group\n                                                    as={Col}\n                                                    md=\"6\"\n                                                    controlId=\"validationFormik3\"\n                                                >\n                                                    <Form.Group>\n                                                        <Button\n                                                            type=\"submit\"\n                                                            className=\"btn-block\"\n                                                            disabled={isSubmitting}\n                                                        >\n                                                            {isSubmitting\n                                                                ? 'Please wait...'\n                                                                : isRegister\n                                                                    ? 'Register'\n                                                                    : 'Login'}\n                                                        </Button>\n                                                    </Form.Group>\n                                                </Form.Group>\n                                                <div className=\"col-md-6 text-right\">\n                                                    <a className=\"small\" href=\"#\">\n                                                        Forgot password?\n                                                    </a>\n                                                </div>\n                                            </Form.Row>\n\n                                        </Form>\n                                        {/* <DisplayFormikState {...props} /> */}\n                                    </>\n                                );\n                            }}\n                        />\n                    </article>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default connect(\n    state => ({}),\n    {\n        setGoogleUser,\n        showToast,\n        registerLocalUser,\n        loginLocalUser,\n        redirectAfterLogin,\n    },\n)(withRouter(Login));\n/*\nprofileObj:\nemail: \"api@gmail.com\"\nfamilyName: \"Kralc\"\ngivenName: \"rko\"\ngoogleId: \"25350571\"\nimageUrl: \"https://lh6.googleusercontent.com/-6ZAIGkgvuaQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc9E5uex_lbFBctbj8KYQ6cLt5WLg/s96-c/photo.jpg\"\nname: \"rko Kral\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}