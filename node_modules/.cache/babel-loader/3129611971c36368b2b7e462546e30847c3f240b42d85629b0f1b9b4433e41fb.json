{"ast":null,"code":"'use strict';\n\nvar random = require('./lib/random').default;\nvar sets = require('./lib/character-sets');\nvar util = require('./lib/util');\nObject.keys(sets).forEach(function (k) {\n  exports[k] = sets[k];\n});\nvar defaultAmbiguousSets = ['Il1|', 'O0'];\nfunction randomPassword(opts) {\n  var defaults = {\n    avoidAmbiguous: true,\n    characters: [sets.lower, {\n      characters: sets.upper,\n      exactly: 1\n    }, {\n      characters: sets.symbols,\n      exactly: 1\n    }],\n    length: 12,\n    predicate: function () {\n      return true;\n    },\n    random: random\n  };\n  opts = util.assign({}, defaults, opts);\n  var characterRules = translateRules(opts);\n  if (!util.isInteger(opts.length)) {\n    throw new Error('length must be an integer');\n  }\n  if (opts.length < 1) {\n    throw new Error('length must be > 0');\n  }\n  if (opts.length < characterRules.length) {\n    throw new Error('length must be >= # of character sets passed');\n  }\n  if (characterRules.some(function (rule) {\n    return !rule.characters;\n  })) {\n    throw new Error('No character set may be empty');\n  }\n  if (characterRules.length === 0) {\n    throw new Error('Must pass one or more character sets');\n  }\n  if (typeof opts.predicate !== 'function') {\n    throw new Error('predicate must be a function');\n  }\n  var minimumLength = characterRules.map(function (rule) {\n    return rule.exactly || 1;\n  }).reduce(function (l, r) {\n    return l + r;\n  }, 0);\n  if (opts.length < minimumLength) {\n    throw new Error('length is too short for character set rules');\n  }\n  var allExactly = characterRules.every(function (rule) {\n    return rule.exactly;\n  });\n  if (allExactly) {\n    var exactlyLength = characterRules.reduce(function (acc, r) {\n      return acc + r.exactly;\n    }, 0);\n    if (exactlyLength !== opts.length) {\n      throw new Error('Must pass a set without exactly rule to generate the specified length');\n    }\n  }\n  var result;\n  do {\n    result = generatePassword(characterRules, opts.length, opts.random);\n  } while (!opts.predicate(result));\n  return result;\n}\nexports.randomPassword = randomPassword;\nfunction generatePassword(characterRules, length, random) {\n  var requiredSetsWithRepeats = characterRules.map(function (rule) {\n    return rule.exactly ? util.repeat(rule.characters, rule.exactly) : [rule.characters];\n  }).reduce(function (l, r) {\n    return l.concat(r);\n  }); // flatten back to array of strings\n  var requiredChoices = requiredSetsWithRepeats.map(function (characters) {\n    return random.choose(characters);\n  });\n  var fillCharcters = characterRules.filter(function (rule) {\n    return !rule.exactly;\n  }).map(function (rule) {\n    return rule.characters;\n  }).join('');\n  var randomChoices = util.range(length - requiredChoices.length).map(function () {\n    return random.choose(fillCharcters);\n  });\n  var shuffled = random.shuffle(requiredChoices.concat(randomChoices));\n  return shuffled.join('');\n}\nfunction translateRules(opts) {\n  if (!opts.characters) {\n    return [];\n  }\n  var result = Array.isArray(opts.characters) ? opts.characters : [opts.characters];\n  result = result.map(function (x) {\n    return util.isString(x) ? {\n      characters: x\n    } : x;\n  });\n  var ambiguousSets = opts.avoidAmbiguous === true ? defaultAmbiguousSets : opts.avoidAmbiguous || [];\n  stripAmbiguous(result, ambiguousSets);\n  return result;\n}\nfunction stripAmbiguous(characterRules, ambiguousSets) {\n  var allCharacters = characterRules.map(function (rule) {\n    return rule.characters;\n  }).join('');\n  var ambiguousCharacters = ambiguousSets.filter(function (ambiguousSet) {\n    return util.intersection(ambiguousSet, allCharacters).length > 1;\n  }).join('');\n  characterRules.forEach(function (rule) {\n    rule.characters = util.toArray(rule.characters).filter(function (ch) {\n      return ambiguousCharacters.indexOf(ch) < 0;\n    }).join('');\n  });\n}\nfunction randomString(opts) {\n  var defaults = {\n    characters: [sets.lower, sets.upper, sets.digits, sets.symbols],\n    length: 20\n  };\n  opts = util.assign({}, defaults, opts);\n  opts.avoidAmbiguous = false; // hard override\n\n  return randomPassword(opts);\n}\nexports.randomString = randomString;","map":{"version":3,"names":["random","require","default","sets","util","Object","keys","forEach","k","exports","defaultAmbiguousSets","randomPassword","opts","defaults","avoidAmbiguous","characters","lower","upper","exactly","symbols","length","predicate","assign","characterRules","translateRules","isInteger","Error","some","rule","minimumLength","map","reduce","l","r","allExactly","every","exactlyLength","acc","result","generatePassword","requiredSetsWithRepeats","repeat","concat","requiredChoices","choose","fillCharcters","filter","join","randomChoices","range","shuffled","shuffle","Array","isArray","x","isString","ambiguousSets","stripAmbiguous","allCharacters","ambiguousCharacters","ambiguousSet","intersection","toArray","ch","indexOf","randomString","digits"],"sources":["/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/node_modules/secure-random-password/index.js"],"sourcesContent":["'use strict';\n\nvar random = require('./lib/random').default;\nvar sets = require('./lib/character-sets');\nvar util = require('./lib/util');\n\nObject.keys(sets).forEach(function (k) {\n  exports[k] = sets[k];\n});\n\nvar defaultAmbiguousSets = [\n  'Il1|',\n  'O0'\n];\n\nfunction randomPassword(opts) {\n  var defaults = {\n    avoidAmbiguous: true,\n    characters: [\n      sets.lower,\n      { characters: sets.upper, exactly: 1 },\n      { characters: sets.symbols, exactly: 1 }\n    ],\n    length: 12,\n    predicate: function () { return true },\n    random: random,\n  };\n  opts = util.assign({}, defaults, opts);\n\n  var characterRules = translateRules(opts);\n\n  if (!util.isInteger(opts.length)) {\n    throw new Error('length must be an integer');\n  }\n  if (opts.length < 1) {\n    throw new Error('length must be > 0');\n  }\n  if (opts.length < characterRules.length) {\n    throw new Error('length must be >= # of character sets passed');\n  }\n  if (characterRules.some(function (rule) { return !rule.characters })) {\n    throw new Error('No character set may be empty');\n  }\n  if (characterRules.length === 0) {\n    throw new Error('Must pass one or more character sets');\n  }\n  if (typeof opts.predicate !== 'function') {\n    throw new Error('predicate must be a function');\n  }\n\n  var minimumLength = characterRules\n    .map(function (rule) { return rule.exactly || 1 })\n    .reduce(function (l, r) { return l + r }, 0);\n  if (opts.length < minimumLength) {\n    throw new Error('length is too short for character set rules');\n  }\n\n  var allExactly = characterRules.every(function (rule) { return rule.exactly });\n  if (allExactly) {\n    var exactlyLength = characterRules.reduce(function (acc, r) { return acc + r.exactly }, 0);\n    if (exactlyLength !== opts.length) {\n      throw new Error('Must pass a set without exactly rule to generate the specified length');\n    }\n  }\n\n  var result;\n  do {\n    result = generatePassword(characterRules, opts.length, opts.random);\n  } while (!opts.predicate(result));\n  return result;\n}\n\nexports.randomPassword = randomPassword;\n\nfunction generatePassword(characterRules, length, random) {\n  var requiredSetsWithRepeats = characterRules\n    .map(function (rule) { return rule.exactly ? util.repeat(rule.characters, rule.exactly) : [rule.characters] })\n    .reduce(function (l, r) { return l.concat(r) }); // flatten back to array of strings\n  var requiredChoices = requiredSetsWithRepeats\n    .map(function (characters) { return random.choose(characters) });\n\n  var fillCharcters = characterRules\n    .filter(function (rule) { return !rule.exactly })\n    .map(function (rule) { return rule.characters })\n    .join('');\n  var randomChoices = util.range(length - requiredChoices.length)\n    .map(function () { return random.choose(fillCharcters) });\n\n  var shuffled = random.shuffle(requiredChoices.concat(randomChoices));\n  return shuffled.join('');\n}\n\nfunction translateRules(opts) {\n  if (!opts.characters) {\n    return [];\n  }\n  var result = Array.isArray(opts.characters)\n    ? opts.characters\n    : [opts.characters];\n  result = result.map(function (x) { return util.isString(x) ? { characters: x } : x });\n\n  var ambiguousSets = opts.avoidAmbiguous === true\n    ? defaultAmbiguousSets\n    : (opts.avoidAmbiguous || []);\n\n  stripAmbiguous(result, ambiguousSets);\n\n  return result;\n}\n\nfunction stripAmbiguous(characterRules, ambiguousSets) {\n  var allCharacters = characterRules.map(function (rule) { return rule.characters }).join('');\n\n  var ambiguousCharacters = ambiguousSets\n    .filter(function (ambiguousSet) { return util.intersection(ambiguousSet, allCharacters).length > 1 })\n    .join('');\n\n  characterRules.forEach(function (rule) {\n    rule.characters = util.toArray(rule.characters)\n      .filter(function(ch) { return ambiguousCharacters.indexOf(ch) < 0 }).join('');\n  });\n}\n\nfunction randomString(opts) {\n  var defaults = {\n    characters: [sets.lower, sets.upper, sets.digits, sets.symbols],\n    length: 20\n  };\n  opts = util.assign({}, defaults, opts);\n\n  opts.avoidAmbiguous = false; // hard override\n\n  return randomPassword(opts);\n}\n\nexports.randomString = randomString;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}