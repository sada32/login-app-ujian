{"ast":null,"code":"var _jsxFileName = \"/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/Login/Login.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { Button, Col, Form, Row, InputGroup } from \"react-bootstrap\";\nimport FormTextField from \"../components/form/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  username: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n  terms: yup.bool().required()\n});\nconst handleChange = () => {\n  console.log(\"n\");\n};\nconst Input = () => {\n  return /*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      children: \"@\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = Input;\nconst Login = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4 container-login p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"my-2\",\n        width: \"100px\",\n        src: \"/images/icon-person.png\",\n        alt: \"Icon Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-white my-4\",\n        children: \"Daftar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            validationSchema: schema,\n            onSubmit: handleChange,\n            initialValues: {\n              firstName: '',\n              lastName: \"Otto\",\n              city: undefined,\n              state: \"ON\",\n              friends: [{\n                firstName: \"John\",\n                lastName: \"Snow\"\n              }]\n            },\n            children: _ref => {\n              let {\n                handleSubmit,\n                isValid,\n                isSubmitting\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(FormTextField, {\n                    controlId: \"validationFormikUsername\",\n                    label: \"Username\",\n                    type: \"text\",\n                    name: \"username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(FormTextField, {\n                    controlId: \"validationFormikUsername\",\n                    label: \"Password\",\n                    type: \"password\",\n                    name: \"password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: !isValid || isSubmitting,\n                    variant: \"success\",\n                    as: \"input\",\n                    size: \"lg\",\n                    type: \"submit\",\n                    value: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Login;\nexport default Login;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"names":["React","Formik","yup","Button","Col","Form","Row","InputGroup","FormTextField","schema","object","firstName","string","required","lastName","username","city","state","zip","terms","bool","handleChange","console","log","Input","Login","undefined","friends","handleSubmit","isValid","isSubmitting"],"sources":["/Users/sada/Documents/Kuliah/Semester 6/Periode 2/Ujian/login-app/src/Login/Login.js"],"sourcesContent":["import React from \"react\";\nimport {Formik} from \"formik\";\nimport * as yup from \"yup\";\nimport {Button, Col, Form, Row, InputGroup} from \"react-bootstrap\";\nimport FormTextField from \"../components/form/form\";\n\nconst schema = yup.object({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    username: yup.string().required(),\n    city: yup.string().required(),\n    state: yup.string().required(),\n    zip: yup.string().required(),\n    terms: yup.bool().required()\n});\n\nconst handleChange = () => {\n    console.log(\"n\")\n}\n\nconst Input = () => {\n    return (\n        <InputGroup.Prepend>\n            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n        </InputGroup.Prepend>\n    )\n}\n\nconst Login = () => {\n    return (\n        <div className=\"global-container\">\n            <div className=\"col-md-4 container-login p-5\">\n                <img className=\"my-2\" width=\"100px\" src=\"/images/icon-person.png\" alt=\"Icon Person\"/>\n                <h3 className=\"text-white my-4\">Daftar</h3>\n                <Row>\n                    <Col>\n                        <Formik\n                            validationSchema={schema}\n                            onSubmit={handleChange}\n                            initialValues={{\n                                firstName: '',\n                                lastName: \"Otto\",\n                                city: undefined,\n                                state: \"ON\",\n                                friends: [{firstName: \"John\", lastName: \"Snow\"}]\n                            }}\n                        >\n                            {({\n                                  handleSubmit,\n                                  isValid,\n                                  isSubmitting\n                              }) => (\n                                <Form noValidate onSubmit={handleSubmit}>\n                                    <Col>\n                                        <FormTextField\n                                            controlId=\"validationFormikUsername\"\n                                            label=\"Username\"\n                                            type=\"text\"\n                                            name=\"username\"\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <FormTextField\n                                            controlId=\"validationFormikUsername\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            name=\"password\"\n                                        />\n                                    </Col>\n                                    <Col>\n                                        <Button\n                                            disabled={!isValid || isSubmitting}\n                                            variant=\"success\"\n                                            as=\"input\"\n                                            size=\"lg\"\n                                            type=\"submit\"\n                                            value=\"Submit\"\n                                        />\n                                    </Col>\n                                </Form>\n                            )}\n                        </Formik>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}